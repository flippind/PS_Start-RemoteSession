
# Prompt for current session drive letter
BEGIN {
    CLASS Drive {
        [string]$name
        hidden [string]$PSDriveName  # This should be generated by the constructor as $name[0]
        [string]$driveType
        [string]$label
        [string]$netPath
    }
    $currentDrives = @()
    $machineFQDN = [System.Net.DNS]::GetHostByName($ENV:COMPUTERNAME).hostname
}
PROCESS {
    #region Get current session letters and paths
    $drivesDotNet = [System.IO.DriveInfo]::GetDrives() | Where-object {$_.DriveType -in ('Network','Fixed')}
    ForEach ($drive in $drivesDotNet) {
        $driveConstruct = @{
            'name' = $drive.name
            'PSDriveName' = ($drive.name)[0]
            'driveType' = $drive.DriveType
            'label' = $drive.VolumeLabel
        }

        # Resolve drive letters to UNC    
        if ($drive.DriveType -eq "Network") { 
            $driveConstruct.netPath = (Get-PSDrive -Name $driveConstruct['PSDriveName']).DisplayRoot
        }
        elseif ($drive.DriveType -eq "Fixed") { 
            $driveConstruct.netPath = "\\$machineFQDN\$($driveConstruct['PSDriveName'])$"
        }
        
        $currentDrives += New-Object Drive -Property $driveConstruct
    }
    #endregion Get current session letters and paths
    
    # Prompt or assume session name
    
    # Invoke New-PSDrive to connect drive letter and UNC path
}
END {
    $currentDrives | ft
}
